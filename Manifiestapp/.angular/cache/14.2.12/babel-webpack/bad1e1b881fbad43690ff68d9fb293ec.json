{"ast":null,"code":"import { r as registerInstance, h, g as getElement, H as Host } from './index-1c5c47b4.js';\nconst toastCss = \":host{position:fixed;bottom:20px;left:0;right:0;display:-ms-flexbox;display:flex;opacity:0}:host(.in){-webkit-transition:opacity 300ms;transition:opacity 300ms;opacity:1}:host(.out){-webkit-transition:opacity 1s;transition:opacity 1s;opacity:0}.wrapper{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.toast{font-family:-apple-system, system-ui, \\\"Helvetica Neue\\\", Roboto, sans-serif;background-color:#eee;color:black;border-radius:5px;padding:10px 15px;font-size:14px;font-weight:500;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.20);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.20)}\";\nconst PWAToast = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.message = undefined;\n    this.duration = 2000;\n    this.closing = null;\n  }\n\n  hostData() {\n    const classes = {\n      out: !!this.closing\n    };\n\n    if (this.closing !== null) {\n      classes['in'] = !this.closing;\n    }\n\n    return {\n      class: classes\n    };\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.closing = false;\n    });\n    setTimeout(() => {\n      this.close();\n    }, this.duration);\n  }\n\n  close() {\n    this.closing = true;\n    setTimeout(() => {\n      this.el.parentNode.removeChild(this.el);\n    }, 1000);\n  }\n\n  __stencil_render() {\n    return h(\"div\", {\n      class: \"wrapper\"\n    }, h(\"div\", {\n      class: \"toast\"\n    }, this.message));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  render() {\n    return h(Host, this.hostData(), this.__stencil_render());\n  }\n\n};\nPWAToast.style = toastCss;\nexport { PWAToast as pwa_toast };","map":null,"metadata":{},"sourceType":"module"}