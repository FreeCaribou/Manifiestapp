{"ast":null,"code":"import { of } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../base.service\";\nimport * as i2 from \"../../communication/language.communication.service\";\nexport let NewsListService = /*#__PURE__*/(() => {\n  class NewsListService {\n    constructor(baseService, languageService) {\n      this.baseService = baseService;\n      this.languageService = languageService;\n      this.baseUrl = `${environment.baseUrl}posts`;\n      this.allNews = [];\n      this.stickyNews = [];\n      this.languageService.langHasChangeEvent.subscribe(e => {\n        this.resetInfoListCache();\n      });\n    } // sticky = important in the wordpress language\n\n\n    getInfos(onlySticky = false) {\n      var _a, _b;\n\n      if (((_a = this.allNews) === null || _a === void 0 ? void 0 : _a.length) === 0 && !onlySticky || ((_b = this.stickyNews) === null || _b === void 0 ? void 0 : _b.length) === 0 && onlySticky) {\n        return this.baseService.get(`${this.baseUrl}?_embed=wp:featuredmedia&lang=${this.languageService.selectedLanguage}${onlySticky ? '&sticky=true' : ''}&per_page=100`).pipe(map(data => {\n          return data.map(e => {\n            return this.mapRawWpDataToClearData(e);\n          });\n        }), tap(n => {\n          if (onlySticky) {\n            this.stickyNews = n;\n          } else {\n            this.allNews = n;\n          }\n        }));\n      } else {\n        if (onlySticky) {\n          return of(this.stickyNews);\n        } else {\n          return of(this.allNews);\n        }\n      }\n    }\n\n    getInfo(id) {\n      return this.baseService.get(`${this.baseUrl}/${id}?_embed=wp:featuredmedia&lang=${this.languageService.selectedLanguage}`).pipe(map(n => this.mapRawWpDataToClearData(n)));\n    }\n\n    mapRawWpDataToClearData(newInfo) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      newInfo.headline = (_a = newInfo.title) === null || _a === void 0 ? void 0 : _a.rendered;\n      newInfo.mainPictureUrl = ((_b = newInfo._embedded) === null || _b === void 0 ? void 0 : _b['wp:featuredmedia']) && ((_d = (_c = newInfo._embedded) === null || _c === void 0 ? void 0 : _c['wp:featuredmedia'][0]) === null || _d === void 0 ? void 0 : _d.source_url) ? (_f = (_e = newInfo._embedded) === null || _e === void 0 ? void 0 : _e['wp:featuredmedia'][0]) === null || _f === void 0 ? void 0 : _f.source_url : 'assets/pictures/manifiesta-title-logo.jpg';\n      newInfo.allText = (_g = newInfo.content) === null || _g === void 0 ? void 0 : _g.rendered;\n      newInfo.shortText = (_h = newInfo.excerpt) === null || _h === void 0 ? void 0 : _h.rendered;\n      return newInfo;\n    }\n\n    resetInfoListCache() {\n      this.allNews = [];\n      this.stickyNews = [];\n    }\n\n  }\n\n  NewsListService.ɵfac = function NewsListService_Factory(t) {\n    return new (t || NewsListService)(i0.ɵɵinject(i1.BaseService), i0.ɵɵinject(i2.LanguageCommunicationService));\n  };\n\n  NewsListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NewsListService,\n    factory: NewsListService.ɵfac,\n    providedIn: 'root'\n  });\n  return NewsListService;\n})();","map":null,"metadata":{},"sourceType":"module"}