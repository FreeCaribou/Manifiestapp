{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpErrorInterceptor } from './shared/services/data/http-error.interceptor';\nimport { SharedModule } from './shared/shared.module';\nimport { SellingPageModule } from './pages/selling/selling.module';\nimport { AppAvailability } from '@awesome-cordova-plugins/app-availability/ngx';\nimport { Diagnostic } from '@awesome-cordova-plugins/diagnostic/ngx';\nimport { OpenNativeSettings } from '@awesome-cordova-plugins/open-native-settings/ngx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@ngx-translate/core\";\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true\n    }, {\n      provide: RouteReuseStrategy,\n      useClass: IonicRouteStrategy\n    }, AppAvailability, OpenNativeSettings, Diagnostic],\n    imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, HttpClientModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }), TranslateModule, SharedModule, SellingPageModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}