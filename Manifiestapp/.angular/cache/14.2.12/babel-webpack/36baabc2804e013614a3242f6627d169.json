{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/data/info-list/info-list.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/communication/loading.communication.service\";\nimport * as i4 from \"src/app/shared/services/data/programme/programme.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"../../shared/components/header/header.component\";\n\nfunction ProgrammePage_ion_tab_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-tab-button\", 3)(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const d_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"custom-tab-selected\", ctx_r0.isTabSelected(d_r1));\n    i0.ɵɵproperty(\"tab\", \"subprogramme/\" + d_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(d_r1);\n  }\n}\n\nexport let ProgrammePage = /*#__PURE__*/(() => {\n  class ProgrammePage {\n    constructor(infoListService, router, loadingCommunication, programmeService) {\n      this.infoListService = infoListService;\n      this.router = router;\n      this.loadingCommunication = loadingCommunication;\n      this.programmeService = programmeService;\n      this.days = []; // for the internet connection\n\n      this.connected = true;\n    }\n\n    ionViewWillEnter() {\n      // Network.getStatus().then(n => {\n      //   this.connected = n.connected;\n      //   if (this.connected) {\n      //     this.loadingCommunication.changeLoaderTo(true);\n      //     this.infoListService.getDays().subscribe(data => {\n      //       this.setDays(data);\n      //     }).add(() => { this.loadingCommunication.changeLoaderTo(false); });\n      //   } else {\n      //     this.setDays(this.infoListService.getOfflineDaysList())\n      //   }\n      // });\n      this.loadingCommunication.changeLoaderTo(true);\n      this.programmeService.getBigBlobAllProgramme().pipe().subscribe(data => {\n        data.items.forEach(item => {\n          let day = item.api_event_dates[0].day;\n\n          if (!this.days.includes(day)) {\n            this.days.push(day);\n          }\n        });\n\n        if (!this.router.url.includes('subprogramme')) {\n          this.router.navigate(['programme', 'subprogramme', this.days[0]]);\n        }\n      }).add(() => {\n        this.loadingCommunication.changeLoaderTo(false);\n      });\n    } // The data from WP don't come always in right order for the days\n    // We look for the slug, kind of WP id\n    // Slug will be day-<number of the day event>-lang(nl||fr)\n\n\n    setDays(data) {\n      var _a;\n\n      this.days = data.sort((a, b) => {\n        return a.slug < b.slug ? -1 : 1;\n      });\n\n      if (!this.router.url.includes('subprogramme')) {\n        this.router.navigate(['programme', 'subprogramme', (_a = data[0]) === null || _a === void 0 ? void 0 : _a.id]);\n      }\n    }\n\n    ionViewWillLeave() {\n      this.days = [];\n    }\n\n    isTabSelected(d) {\n      return this.router.url.includes(d);\n    }\n\n  }\n\n  ProgrammePage.ɵfac = function ProgrammePage_Factory(t) {\n    return new (t || ProgrammePage)(i0.ɵɵdirectiveInject(i1.InfoListService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoadingCommunicationService), i0.ɵɵdirectiveInject(i4.ProgrammeService));\n  };\n\n  ProgrammePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProgrammePage,\n    selectors: [[\"app-programme\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"title\"], [\"slot\", \"top\"], [3, \"tab\", \"custom-tab-selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"tab\"]],\n    template: function ProgrammePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-content\")(2, \"ion-tabs\")(3, \"ion-tab-bar\", 1);\n        i0.ɵɵtemplate(4, ProgrammePage_ion_tab_button_4_Template, 3, 4, \"ion-tab-button\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"title\", \"Programme\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.days);\n      }\n    },\n    dependencies: [i5.NgForOf, i6.IonContent, i6.IonLabel, i6.IonTabBar, i6.IonTabButton, i6.IonTabs, i7.HeaderComponent],\n    encapsulation: 2\n  });\n  return ProgrammePage;\n})();","map":null,"metadata":{},"sourceType":"module"}