{"ast":null,"code":"import _asyncToGenerator from \"C:/Main/Document/Code/Manifiestapp/Manifiestapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { r as registerInstance, f as forceUpdate, h, g as getElement } from './index-1c5c47b4.js';\n/**\n * MediaStream ImageCapture polyfill\n *\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet ImageCapture = window.ImageCapture;\n\nif (typeof ImageCapture === 'undefined') {\n  ImageCapture = class {\n    /**\n     * TODO https://www.w3.org/TR/image-capture/#constructors\n     *\n     * @param {MediaStreamTrack} videoStreamTrack - A MediaStreamTrack of the 'video' kind\n     */\n    constructor(videoStreamTrack) {\n      if (videoStreamTrack.kind !== 'video') throw new DOMException('NotSupportedError');\n      this._videoStreamTrack = videoStreamTrack;\n\n      if (!('readyState' in this._videoStreamTrack)) {\n        // Polyfill for Firefox\n        this._videoStreamTrack.readyState = 'live';\n      } // MediaStream constructor not available until Chrome 55 - https://www.chromestatus.com/feature/5912172546752512\n\n\n      this._previewStream = new MediaStream([videoStreamTrack]);\n      this.videoElement = document.createElement('video');\n      this.videoElementPlaying = new Promise(resolve => {\n        this.videoElement.addEventListener('playing', resolve);\n      });\n\n      if (HTMLMediaElement) {\n        this.videoElement.srcObject = this._previewStream; // Safari 11 doesn't allow use of createObjectURL for MediaStream\n      } else {\n        this.videoElement.src = URL.createObjectURL(this._previewStream);\n      }\n\n      this.videoElement.muted = true;\n      this.videoElement.setAttribute('playsinline', ''); // Required by Safari on iOS 11. See https://webkit.org/blog/6784\n\n      this.videoElement.play();\n      this.canvasElement = document.createElement('canvas'); // TODO Firefox has https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas\n\n      this.canvas2dContext = this.canvasElement.getContext('2d');\n    }\n    /**\n     * https://w3c.github.io/mediacapture-image/index.html#dom-imagecapture-videostreamtrack\n     * @return {MediaStreamTrack} The MediaStreamTrack passed into the constructor\n     */\n\n\n    get videoStreamTrack() {\n      return this._videoStreamTrack;\n    }\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-getphotocapabilities\n     * @return {Promise<PhotoCapabilities>} Fulfilled promise with\n     * [PhotoCapabilities](https://www.w3.org/TR/image-capture/#idl-def-photocapabilities)\n     * object on success, rejected promise on failure\n     */\n\n\n    getPhotoCapabilities() {\n      return new Promise(function executorGPC(resolve, reject) {\n        // TODO see https://github.com/w3c/mediacapture-image/issues/97\n        const MediaSettingsRange = {\n          current: 0,\n          min: 0,\n          max: 0\n        };\n        resolve({\n          exposureCompensation: MediaSettingsRange,\n          exposureMode: 'none',\n          fillLightMode: ['none'],\n          focusMode: 'none',\n          imageHeight: MediaSettingsRange,\n          imageWidth: MediaSettingsRange,\n          iso: MediaSettingsRange,\n          redEyeReduction: false,\n          whiteBalanceMode: 'none',\n          zoom: MediaSettingsRange\n        });\n        reject(new DOMException('OperationError'));\n      });\n    }\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-setoptions\n     * @param {Object} photoSettings - Photo settings dictionary, https://www.w3.org/TR/image-capture/#idl-def-photosettings\n     * @return {Promise<void>} Fulfilled promise on success, rejected promise on failure\n     */\n\n\n    setOptions(_photoSettings = {}) {\n      return new Promise(function executorSO(_resolve, _reject) {// TODO\n      });\n    }\n    /**\n     * TODO\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-takephoto\n     * @return {Promise<Blob>} Fulfilled promise with [Blob](https://www.w3.org/TR/FileAPI/#blob)\n     * argument on success; rejected promise on failure\n     */\n\n\n    takePhoto() {\n      const self = this;\n      return new Promise(function executorTP(resolve, reject) {\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\n        if (self._videoStreamTrack.readyState !== 'live') {\n          return reject(new DOMException('InvalidStateError'));\n        }\n\n        self.videoElementPlaying.then(() => {\n          try {\n            self.canvasElement.width = self.videoElement.videoWidth;\n            self.canvasElement.height = self.videoElement.videoHeight;\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\n            self.canvasElement.toBlob(resolve);\n          } catch (error) {\n            reject(new DOMException('UnknownError'));\n          }\n        });\n      });\n    }\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-grabframe\n     * @return {Promise<ImageBitmap>} Fulfilled promise with\n     * [ImageBitmap](https://www.w3.org/TR/html51/webappapis.html#webappapis-images)\n     * argument on success; rejected promise on failure\n     */\n\n\n    grabFrame() {\n      const self = this;\n      return new Promise(function executorGF(resolve, reject) {\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\n        if (self._videoStreamTrack.readyState !== 'live') {\n          return reject(new DOMException('InvalidStateError'));\n        }\n\n        self.videoElementPlaying.then(() => {\n          try {\n            self.canvasElement.width = self.videoElement.videoWidth;\n            self.canvasElement.height = self.videoElement.videoHeight;\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0); // TODO polyfill https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap for IE\n\n            resolve(window.createImageBitmap(self.canvasElement));\n          } catch (error) {\n            reject(new DOMException('UnknownError'));\n          }\n        });\n      });\n    }\n\n  };\n}\n\nwindow.ImageCapture = ImageCapture;\nconst cameraCss = \":host{--header-height:4em;--footer-height:9em;--header-height-landscape:3em;--footer-height-landscape:6em;--shutter-size:6em;--icon-size-header:1.5em;--icon-size-footer:2.5em;--margin-size-header:1.5em;--margin-size-footer:2.0em;font-family:-apple-system, BlinkMacSystemFont,\\n    “Segoe UI”, “Roboto”, “Droid Sans”, “Helvetica Neue”, sans-serif;display:block;width:100%;height:100%}.items{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;width:100%;height:100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.items .item{-ms-flex:1;flex:1;text-align:center}.items .item:first-child{text-align:left}.items .item:last-child{text-align:right}.camera-wrapper{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%}.camera-header{color:white;background-color:black;height:var(--header-height)}.camera-header .items{padding:var(--margin-size-header)}.camera-footer{position:relative;color:white;background-color:black;height:var(--footer-height)}.camera-footer .items{padding:var(--margin-size-footer)}@media (max-height: 375px){.camera-header{--header-height:var(--header-height-landscape)}.camera-footer{--footer-height:var(--footer-height-landscape)}.camera-footer .shutter{--shutter-size:4em}}.camera-video{position:relative;-ms-flex:1;flex:1;overflow:hidden;background-color:black}video{width:100%;height:100%;max-height:100%;min-height:100%;-o-object-fit:cover;object-fit:cover;background-color:black}.pick-image{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:absolute;left:var(--margin-size-footer);top:0;height:100%;width:var(--icon-size-footer);color:white}.pick-image input{visibility:hidden}.pick-image svg{cursor:pointer;fill:white;width:var(--icon-size-footer);height:var(--icon-size-footer)}.shutter{position:absolute;left:50%;top:50%;width:var(--shutter-size);height:var(--shutter-size);margin-top:calc(var(--shutter-size) / -2);margin-left:calc(var(--shutter-size) / -2);border-radius:100%;background-color:#c6cdd8;padding:12px;-webkit-box-sizing:border-box;box-sizing:border-box}.shutter:active .shutter-button{background-color:#9da9bb}.shutter-button{background-color:white;border-radius:100%;width:100%;height:100%}.rotate{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:absolute;right:var(--margin-size-footer);top:0;height:100%;width:var(--icon-size-footer);color:white}.rotate img{width:var(--icon-size-footer);height:var(--icon-size-footer)}.shutter-overlay{z-index:5;position:absolute;width:100%;height:100%;background-color:black}.error{width:100%;height:100%;color:white;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.no-device{background-color:black;-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;color:white}.no-device label{cursor:pointer;background:#fff;border-radius:6px;padding:6px 8px;color:black}.no-device input{visibility:hidden;height:0;margin-top:16px}.accept{background-color:black;-ms-flex:1;flex:1;overflow:hidden}.accept .accept-image{width:100%;height:100%;max-height:100%;background-position:center center;background-size:cover;background-repeat:no-repeat}.close img{cursor:pointer;width:var(--icon-size-header);height:var(--icon-size-header)}.flash img{width:var(--icon-size-header);height:var(--icon-size-header)}.accept-use img{width:var(--icon-size-footer);height:var(--icon-size-footer)}.accept-cancel img{width:var(--icon-size-footer);height:var(--icon-size-footer)}.offscreen-image-render{top:0;left:0;visibility:hidden;pointer-events:none;width:100%;height:100%}\";\nconst CameraPWA = class {\n  constructor(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef); // Whether the device has multiple cameras (front/back)\n\n    this.hasMultipleCameras = false; // Whether the device has flash support\n\n    this.hasFlash = false; // Flash modes for camera\n\n    this.flashModes = []; // Current flash mode\n\n    this.flashMode = 'off';\n\n    this.handlePickFile = _e => {};\n\n    this.handleShutterClick = _e => {\n      console.debug('shutter click');\n      this.capture();\n    };\n\n    this.handleRotateClick = _e => {\n      this.rotate();\n    };\n\n    this.handleClose = _e => {\n      this.handlePhoto && this.handlePhoto(null);\n    };\n\n    this.handleFlashClick = _e => {\n      this.cycleFlash();\n    };\n\n    this.handleCancelPhoto = _e => {\n      const track = this.stream && this.stream.getTracks()[0];\n      let c = track && track.getConstraints();\n      this.photo = null;\n      this.photoSrc = null;\n\n      if (c) {\n        this.initCamera({\n          video: {\n            facingMode: c.facingMode\n          }\n        });\n      } else {\n        this.initCamera();\n      }\n    };\n\n    this.handleAcceptPhoto = _e => {\n      this.handlePhoto && this.handlePhoto(this.photo);\n    };\n\n    this.handleFileInputChange = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (e) {\n        const input = e.target;\n        const file = input.files[0];\n\n        try {\n          const orientation = yield _this.getOrientation(file);\n          console.debug('Got orientation', orientation);\n          _this.photoOrientation = orientation;\n        } catch (e) {}\n\n        _this.handlePhoto && _this.handlePhoto(file);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.handleVideoMetadata = e => {\n      console.debug('Video metadata', e);\n    };\n\n    this.facingMode = 'user';\n    this.handlePhoto = undefined;\n    this.handleNoDeviceError = undefined;\n    this.noDevicesText = 'No camera found';\n    this.noDevicesButtonText = 'Choose image';\n    this.photo = undefined;\n    this.photoSrc = undefined;\n    this.showShutterOverlay = false;\n    this.flashIndex = 0;\n    this.hasCamera = null;\n    this.rotation = 0;\n    this.deviceError = null;\n  }\n\n  componentDidLoad() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.defaultConstraints = {\n        video: {\n          facingMode: _this2.facingMode\n        }\n      }; // Figure out how many cameras we have\n\n      yield _this2.queryDevices(); // Initialize the camera\n\n      yield _this2.initCamera();\n    })();\n  }\n\n  disconnectedCallback() {\n    this.stopStream();\n    this.photoSrc && URL.revokeObjectURL(this.photoSrc);\n  }\n\n  hasImageCapture() {\n    return 'ImageCapture' in window;\n  }\n  /**\n   * Query the list of connected devices and figure out how many video inputs we have.\n   */\n\n\n  queryDevices() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const devices = yield navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter(d => d.kind == 'videoinput');\n        _this3.hasCamera = !!videoDevices.length;\n        _this3.hasMultipleCameras = videoDevices.length > 1;\n      } catch (e) {\n        _this3.deviceError = e;\n      }\n    })();\n  }\n\n  initCamera(constraints) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!constraints) {\n        constraints = _this4.defaultConstraints;\n      }\n\n      try {\n        const stream = yield navigator.mediaDevices.getUserMedia(Object.assign({\n          video: true,\n          audio: false\n        }, constraints));\n\n        _this4.initStream(stream);\n      } catch (e) {\n        _this4.deviceError = e;\n        _this4.handleNoDeviceError && _this4.handleNoDeviceError(e);\n      }\n    })();\n  }\n\n  initStream(stream) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.stream = stream;\n      _this5.videoElement.srcObject = stream;\n\n      if (_this5.hasImageCapture()) {\n        _this5.imageCapture = new window.ImageCapture(stream.getVideoTracks()[0]);\n        yield _this5.initPhotoCapabilities(_this5.imageCapture);\n      } else {\n        _this5.deviceError = 'No image capture';\n        _this5.handleNoDeviceError && _this5.handleNoDeviceError();\n      } // Always re-render\n\n\n      forceUpdate(_this5.el);\n    })();\n  }\n\n  initPhotoCapabilities(imageCapture) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const c = yield imageCapture.getPhotoCapabilities();\n\n      if (c.fillLightMode && c.fillLightMode.length > 1) {\n        _this6.flashModes = c.fillLightMode.map(m => m); // Try to recall the current flash mode\n\n        if (_this6.flashMode) {\n          _this6.flashMode = _this6.flashModes[_this6.flashModes.indexOf(_this6.flashMode)] || 'off';\n          _this6.flashIndex = _this6.flashModes.indexOf(_this6.flashMode) || 0;\n        } else {\n          _this6.flashIndex = 0;\n        }\n      }\n    })();\n  }\n\n  stopStream() {\n    if (this.videoElement) {\n      this.videoElement.srcObject = null;\n    }\n\n    this.stream && this.stream.getTracks().forEach(track => track.stop());\n  }\n\n  capture() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this7.hasImageCapture()) {\n        try {\n          const photo = yield _this7.imageCapture.takePhoto({\n            fillLightMode: _this7.flashModes.length > 1 ? _this7.flashMode : undefined\n          });\n          yield _this7.flashScreen();\n\n          _this7.promptAccept(photo);\n        } catch (e) {\n          console.error('Unable to take photo!', e);\n        }\n      }\n\n      _this7.stopStream();\n    })();\n  }\n\n  promptAccept(photo) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.photo = photo;\n      const orientation = yield _this8.getOrientation(photo);\n      console.debug('Got orientation', orientation);\n      _this8.photoOrientation = orientation;\n\n      if (orientation) {\n        switch (orientation) {\n          case 1:\n          case 2:\n            _this8.rotation = 0;\n            break;\n\n          case 3:\n          case 4:\n            _this8.rotation = 180;\n            break;\n\n          case 5:\n          case 6:\n            _this8.rotation = 90;\n            break;\n\n          case 7:\n          case 8:\n            _this8.rotation = 270;\n            break;\n        }\n      }\n\n      _this8.photoSrc = URL.createObjectURL(photo);\n    })();\n  }\n\n  getOrientation(file) {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        const view = new DataView(event.target.result);\n\n        if (view.getUint16(0, false) !== 0xFFD8) {\n          return resolve(-2);\n        }\n\n        const length = view.byteLength;\n        let offset = 2;\n\n        while (offset < length) {\n          const marker = view.getUint16(offset, false);\n          offset += 2;\n\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) {\n              return resolve(-1);\n            }\n\n            const little = view.getUint16(offset += 6, false) === 0x4949;\n            offset += view.getUint32(offset + 4, little);\n            const tags = view.getUint16(offset, little);\n            offset += 2;\n\n            for (let i = 0; i < tags; i++) {\n              if (view.getUint16(offset + i * 12, little) === 0x0112) {\n                return resolve(view.getUint16(offset + i * 12 + 8, little));\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) {\n            break;\n          } else {\n            offset += view.getUint16(offset, false);\n          }\n        }\n\n        return resolve(-1);\n      };\n\n      reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n    });\n  }\n\n  rotate() {\n    this.stopStream();\n    const track = this.stream && this.stream.getTracks()[0];\n\n    if (!track) {\n      return;\n    }\n\n    let c = track.getConstraints();\n    let facingMode = c.facingMode;\n\n    if (!facingMode) {\n      let c = track.getCapabilities();\n\n      if (c.facingMode) {\n        facingMode = c.facingMode[0];\n      }\n    }\n\n    if (facingMode === 'environment') {\n      this.initCamera({\n        video: {\n          facingMode: 'user'\n        }\n      });\n    } else {\n      this.initCamera({\n        video: {\n          facingMode: 'environment'\n        }\n      });\n    }\n  }\n\n  setFlashMode(mode) {\n    console.debug('New flash mode: ', mode);\n    this.flashMode = mode;\n  }\n\n  cycleFlash() {\n    if (this.flashModes.length > 0) {\n      this.flashIndex = (this.flashIndex + 1) % this.flashModes.length;\n      this.setFlashMode(this.flashModes[this.flashIndex]);\n    }\n  }\n\n  flashScreen() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, _reject) => {\n        _this9.showShutterOverlay = true;\n        setTimeout(() => {\n          _this9.showShutterOverlay = false;\n          resolve();\n        }, 100);\n      });\n    })();\n  }\n\n  iconExit() {\n    return `data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' enable-background='new 0 0 512 512' xml:space='preserve'%3E%3Cg id='Icon_5_'%3E%3Cg%3E%3Cpath fill='%23FFFFFF' d='M402.2,134L378,109.8c-1.6-1.6-4.1-1.6-5.7,0L258.8,223.4c-1.6,1.6-4.1,1.6-5.7,0L139.6,109.8 c-1.6-1.6-4.1-1.6-5.7,0L109.8,134c-1.6,1.6-1.6,4.1,0,5.7l113.5,113.5c1.6,1.6,1.6,4.1,0,5.7L109.8,372.4c-1.6,1.6-1.6,4.1,0,5.7 l24.1,24.1c1.6,1.6,4.1,1.6,5.7,0l113.5-113.5c1.6-1.6,4.1-1.6,5.7,0l113.5,113.5c1.6,1.6,4.1,1.6,5.7,0l24.1-24.1 c1.6-1.6,1.6-4.1,0-5.7L288.6,258.8c-1.6-1.6-1.6-4.1,0-5.7l113.5-113.5C403.7,138.1,403.7,135.5,402.2,134z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E`;\n  }\n\n  iconPhotos() {\n    return h(\"svg\", {\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: '512',\n      height: '512',\n      viewBox: '0 0 512 512'\n    }, h(\"path\", {\n      d: 'M450.29,112H142c-34,0-62,27.51-62,61.33V418.67C80,452.49,108,480,142,480H450c34,0,62-26.18,62-60V173.33C512,139.51,484.32,112,450.29,112Zm-77.15,61.34a46,46,0,1,1-46.28,46A46.19,46.19,0,0,1,373.14,173.33Zm-231.55,276c-17,0-29.86-13.75-29.86-30.66V353.85l90.46-80.79a46.54,46.54,0,0,1,63.44,1.83L328.27,337l-113,112.33ZM480,418.67a30.67,30.67,0,0,1-30.71,30.66H259L376.08,333a46.24,46.24,0,0,1,59.44-.16L480,370.59Z'\n    }), h(\"path\", {\n      d: 'M384,32H64A64,64,0,0,0,0,96V352a64.11,64.11,0,0,0,48,62V152a72,72,0,0,1,72-72H446A64.11,64.11,0,0,0,384,32Z'\n    }));\n  }\n\n  iconConfirm() {\n    return `data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' enable-background='new 0 0 512 512' xml:space='preserve'%3E%3Ccircle fill='%232CD865' cx='256' cy='256' r='256'/%3E%3Cg id='Icon_1_'%3E%3Cg%3E%3Cg%3E%3Cpath fill='%23FFFFFF' d='M208,301.4l-55.4-55.5c-1.5-1.5-4-1.6-5.6-0.1l-23.4,22.3c-1.6,1.6-1.7,4.1-0.1,5.7l81.6,81.4 c3.1,3.1,8.2,3.1,11.3,0l171.8-171.7c1.6-1.6,1.6-4.2-0.1-5.7l-23.4-22.3c-1.6-1.5-4.1-1.5-5.6,0.1L213.7,301.4 C212.1,303,209.6,303,208,301.4z'/%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E`;\n  }\n\n  iconReverseCamera() {\n    return `data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' enable-background='new 0 0 512 512' xml:space='preserve'%3E%3Cg%3E%3Cpath fill='%23FFFFFF' d='M352,0H160C72,0,0,72,0,160v192c0,88,72,160,160,160h192c88,0,160-72,160-160V160C512,72,440,0,352,0z M356.7,365.8l-3.7,3.3c-27,23.2-61.4,35.9-96.8,35.9c-72.4,0-135.8-54.7-147-125.6c-0.3-1.9-2-3.3-3.9-3.3H64 c-3.3,0-5.2-3.8-3.2-6.4l61.1-81.4c1.6-2.1,4.7-2.1,6.4-0.1l63.3,81.4c2,2.6,0.2,6.5-3.2,6.5h-40.6c-2.5,0-4.5,2.4-3.9,4.8 c11.5,51.5,59.2,90.6,112.4,90.6c26.4,0,51.8-9.7,73.7-27.9l3.1-2.5c1.6-1.3,3.9-1.1,5.3,0.3l18.5,18.6 C358.5,361.6,358.4,364.3,356.7,365.8z M451.4,245.6l-61,83.5c-1.6,2.2-4.8,2.2-6.4,0.1l-63.3-83.3c-2-2.6-0.1-6.4,3.2-6.4h40.8 c2.5,0,4.4-2.3,3.9-4.8c-5.1-24.2-17.8-46.5-36.5-63.7c-21.2-19.4-48.2-30.1-76-30.1c-26.5,0-52.6,9.7-73.7,27.3l-3.1,2.5 c-1.6,1.3-3.9,1.2-5.4-0.3l-18.5-18.5c-1.6-1.6-1.5-4.3,0.2-5.9l3.5-3.1c27-23.2,61.4-35.9,96.8-35.9c38,0,73.9,13.7,101.2,38.7 c23.2,21.1,40.3,55.2,45.7,90.1c0.3,1.9,1.9,3.4,3.9,3.4h41.3C451.4,239.2,453.3,243,451.4,245.6z'/%3E%3C/g%3E%3C/svg%3E`;\n  }\n\n  iconRetake() {\n    return `data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' enable-background='new 0 0 512 512' xml:space='preserve'%3E%3Ccircle fill='%23727A87' cx='256' cy='256' r='256'/%3E%3Cg id='Icon_5_'%3E%3Cg%3E%3Cpath fill='%23FFFFFF' d='M394.2,142L370,117.8c-1.6-1.6-4.1-1.6-5.7,0L258.8,223.4c-1.6,1.6-4.1,1.6-5.7,0L147.6,117.8 c-1.6-1.6-4.1-1.6-5.7,0L117.8,142c-1.6,1.6-1.6,4.1,0,5.7l105.5,105.5c1.6,1.6,1.6,4.1,0,5.7L117.8,364.4c-1.6,1.6-1.6,4.1,0,5.7 l24.1,24.1c1.6,1.6,4.1,1.6,5.7,0l105.5-105.5c1.6-1.6,4.1-1.6,5.7,0l105.5,105.5c1.6,1.6,4.1,1.6,5.7,0l24.1-24.1 c1.6-1.6,1.6-4.1,0-5.7L288.6,258.8c-1.6-1.6-1.6-4.1,0-5.7l105.5-105.5C395.7,146.1,395.7,143.5,394.2,142z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E`;\n  }\n\n  iconFlashOff() {\n    return `data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' style='enable-background:new 0 0 512 512;' xml:space='preserve'%3E%3Cstyle type='text/css'%3E .st0%7Bfill:%23FFFFFF;%7D%0A%3C/style%3E%3Cg%3E%3Cpath class='st0' d='M498,483.7L42.3,28L14,56.4l149.8,149.8L91,293.8c-2.5,3-0.1,7.2,3.9,7.2h143.9c1.6,0,2.7,1.3,2.4,2.7 L197.6,507c-1,4.4,5.8,6.9,8.9,3.2l118.6-142.8L469.6,512L498,483.7z'/%3E%3Cpath class='st0' d='M449,218.2c2.5-3,0.1-7.2-3.9-7.2H301.2c-1.6,0-2.7-1.3-2.4-2.7L342.4,5c1-4.4-5.8-6.9-8.9-3.2L214.9,144.6 l161.3,161.3L449,218.2z'/%3E%3C/g%3E%3C/svg%3E`;\n  }\n\n  iconFlashOn() {\n    return `data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' style='enable-background:new 0 0 512 512;' xml:space='preserve'%3E%3Cstyle type='text/css'%3E .st0%7Bfill:%23FFFFFF;%7D%0A%3C/style%3E%3Cpath class='st0' d='M287.2,211c-1.6,0-2.7-1.3-2.4-2.7L328.4,5c1-4.4-5.8-6.9-8.9-3.2L77,293.8c-2.5,3-0.1,7.2,3.9,7.2h143.9 c1.6,0,2.7,1.3,2.4,2.7L183.6,507c-1,4.4,5.8,6.9,8.9,3.2l242.5-292c2.5-3,0.1-7.2-3.9-7.2L287.2,211L287.2,211z'/%3E%3C/svg%3E`;\n  }\n\n  iconFlashAuto() {\n    return `data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' style='enable-background:new 0 0 512 512;' xml:space='preserve'%3E%3Cstyle type='text/css'%3E .st0%7Bfill:%23FFFFFF;%7D%0A%3C/style%3E%3Cpath class='st0' d='M287.2,211c-1.6,0-2.7-1.3-2.4-2.7L328.4,5c1-4.4-5.8-6.9-8.9-3.2L77,293.8c-2.5,3-0.1,7.2,3.9,7.2h143.9 c1.6,0,2.7,1.3,2.4,2.7L183.6,507c-1,4.4,5.8,6.9,8.9,3.2l242.5-292c2.5-3,0.1-7.2-3.9-7.2L287.2,211L287.2,211z'/%3E%3Cg%3E%3Cpath class='st0' d='M321.3,186l74-186H438l74,186h-43.5l-11.9-32.5h-80.9l-12,32.5H321.3z M415.8,47.9l-27.2,70.7h54.9l-27.2-70.7 H415.8z'/%3E%3C/g%3E%3C/svg%3E`;\n  }\n\n  render() {\n    // const acceptStyles = { transform: `rotate(${-this.rotation}deg)` };\n    const acceptStyles = {};\n    return h(\"div\", {\n      class: \"camera-wrapper\"\n    }, h(\"div\", {\n      class: \"camera-header\"\n    }, h(\"section\", {\n      class: \"items\"\n    }, h(\"div\", {\n      class: \"item close\",\n      onClick: e => this.handleClose(e)\n    }, h(\"img\", {\n      src: this.iconExit()\n    })), h(\"div\", {\n      class: \"item flash\",\n      onClick: e => this.handleFlashClick(e)\n    }, this.flashModes.length > 0 && h(\"div\", null, this.flashMode == 'off' ? h(\"img\", {\n      src: this.iconFlashOff()\n    }) : '', this.flashMode == 'auto' ? h(\"img\", {\n      src: this.iconFlashAuto()\n    }) : '', this.flashMode == 'flash' ? h(\"img\", {\n      src: this.iconFlashOn()\n    }) : '')))), (this.hasCamera === false || !!this.deviceError) && h(\"div\", {\n      class: \"no-device\"\n    }, h(\"h2\", null, this.noDevicesText), h(\"label\", {\n      htmlFor: \"_pwa-elements-camera-input\"\n    }, this.noDevicesButtonText), h(\"input\", {\n      type: \"file\",\n      id: \"_pwa-elements-camera-input\",\n      onChange: this.handleFileInputChange,\n      accept: \"image/*\",\n      class: \"select-file-button\"\n    })), this.photoSrc ? h(\"div\", {\n      class: \"accept\"\n    }, h(\"div\", {\n      class: \"accept-image\",\n      style: Object.assign({\n        backgroundImage: `url(${this.photoSrc})`\n      }, acceptStyles)\n    })) : h(\"div\", {\n      class: \"camera-video\"\n    }, this.showShutterOverlay && h(\"div\", {\n      class: \"shutter-overlay\"\n    }), this.hasImageCapture() ? h(\"video\", {\n      ref: el => this.videoElement = el,\n      onLoadedMetaData: this.handleVideoMetadata,\n      autoplay: true,\n      playsinline: true\n    }) : h(\"canvas\", {\n      ref: el => this.canvasElement = el,\n      width: \"100%\",\n      height: \"100%\"\n    }), h(\"canvas\", {\n      class: \"offscreen-image-render\",\n      ref: e => this.offscreenCanvas = e,\n      width: \"100%\",\n      height: \"100%\"\n    })), this.hasCamera && h(\"div\", {\n      class: \"camera-footer\"\n    }, !this.photo ? [h(\"div\", {\n      class: \"pick-image\",\n      onClick: this.handlePickFile\n    }, h(\"label\", {\n      htmlFor: \"_pwa-elements-file-pick\"\n    }, this.iconPhotos()), h(\"input\", {\n      type: \"file\",\n      id: \"_pwa-elements-file-pick\",\n      onChange: this.handleFileInputChange,\n      accept: \"image/*\",\n      class: \"pick-image-button\"\n    })), h(\"div\", {\n      class: \"shutter\",\n      onClick: this.handleShutterClick\n    }, h(\"div\", {\n      class: \"shutter-button\"\n    })), h(\"div\", {\n      class: \"rotate\",\n      onClick: this.handleRotateClick\n    }, h(\"img\", {\n      src: this.iconReverseCamera()\n    }))] : h(\"section\", {\n      class: \"items\"\n    }, h(\"div\", {\n      class: \"item accept-cancel\",\n      onClick: e => this.handleCancelPhoto(e)\n    }, h(\"img\", {\n      src: this.iconRetake()\n    })), h(\"div\", {\n      class: \"item accept-use\",\n      onClick: e => this.handleAcceptPhoto(e)\n    }, h(\"img\", {\n      src: this.iconConfirm()\n    })))));\n  }\n\n  static get assetsDirs() {\n    return [\"icons\"];\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\nCameraPWA.style = cameraCss;\nexport { CameraPWA as pwa_camera };","map":null,"metadata":{},"sourceType":"module"}