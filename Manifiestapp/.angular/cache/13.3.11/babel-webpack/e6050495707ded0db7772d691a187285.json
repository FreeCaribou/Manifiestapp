{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Main\\\\Document\\\\Code\\\\Manifiestapp\\\\Manifiestapp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-8e692445.js';\nimport { c as config, b as getIonMode } from './ionic-global-c74e4951.js';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config-d4f612d2.js';\nimport { B as BACKDROP, e as prepareOverlay, d as present, f as dismiss, g as eventMethod } from './overlays-58fa8e4d.js';\nimport { g as getClassMap } from './theme-7670341c.js';\nimport { c as createAnimation } from './animation-4ff3f603.js';\nimport './hardware-back-button-490df115.js';\nimport './helpers-3b390e48.js';\nimport './index-33ffec25.js';\n\n/**\n * iOS Loading Enter Animation\n */\nconst iosEnterAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  wrapperAnimation.addElement(baseEl.querySelector('.loading-wrapper')).keyframes([{\n    offset: 0,\n    opacity: 0.01,\n    transform: 'scale(1.1)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: 'scale(1)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * iOS Loading Leave Animation\n */\nconst iosLeaveAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  wrapperAnimation.addElement(baseEl.querySelector('.loading-wrapper')).keyframes([{\n    offset: 0,\n    opacity: 0.99,\n    transform: 'scale(1)'\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: 'scale(0.9)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * Md Loading Enter Animation\n */\nconst mdEnterAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  wrapperAnimation.addElement(baseEl.querySelector('.loading-wrapper')).keyframes([{\n    offset: 0,\n    opacity: 0.01,\n    transform: 'scale(1.1)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: 'scale(1)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * Md Loading Leave Animation\n */\nconst mdLeaveAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  wrapperAnimation.addElement(baseEl.querySelector('.loading-wrapper')).keyframes([{\n    offset: 0,\n    opacity: 0.99,\n    transform: 'scale(1)'\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: 'scale(0.9)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\nconst loadingIosCss = \".sc-ion-loading-ios-h{--min-width:auto;--width:auto;--min-height:auto;--height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.overlay-hidden.sc-ion-loading-ios-h{display:none}.loading-wrapper.sc-ion-loading-ios{display:-ms-flexbox;display:flex;-ms-flex-align:inherit;align-items:inherit;-ms-flex-pack:inherit;justify-content:inherit;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);opacity:0;z-index:10}ion-spinner.sc-ion-loading-ios{color:var(--spinner-color)}.sc-ion-loading-ios-h{--background:var(--ion-overlay-background-color, var(--ion-color-step-100, #f9f9f9));--max-width:270px;--max-height:90%;--spinner-color:var(--ion-color-step-600, #666666);--backdrop-opacity:var(--ion-backdrop-opacity, 0.3);color:var(--ion-text-color, #000);font-size:14px}.loading-wrapper.sc-ion-loading-ios{border-radius:8px;padding-left:34px;padding-right:34px;padding-top:24px;padding-bottom:24px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.loading-wrapper.sc-ion-loading-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:34px;padding-inline-start:34px;-webkit-padding-end:34px;padding-inline-end:34px}}@supports ((-webkit-backdrop-filter: blur(0)) or (backdrop-filter: blur(0))){.loading-translucent.sc-ion-loading-ios-h .loading-wrapper.sc-ion-loading-ios{background-color:rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8);-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}}.loading-content.sc-ion-loading-ios{font-weight:bold}.loading-spinner.sc-ion-loading-ios+.loading-content.sc-ion-loading-ios{margin-left:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.loading-spinner.sc-ion-loading-ios+.loading-content.sc-ion-loading-ios{margin-left:unset;-webkit-margin-start:16px;margin-inline-start:16px}}\";\nconst loadingMdCss = \".sc-ion-loading-md-h{--min-width:auto;--width:auto;--min-height:auto;--height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.overlay-hidden.sc-ion-loading-md-h{display:none}.loading-wrapper.sc-ion-loading-md{display:-ms-flexbox;display:flex;-ms-flex-align:inherit;align-items:inherit;-ms-flex-pack:inherit;justify-content:inherit;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);opacity:0;z-index:10}ion-spinner.sc-ion-loading-md{color:var(--spinner-color)}.sc-ion-loading-md-h{--background:var(--ion-color-step-50, #f2f2f2);--max-width:280px;--max-height:90%;--spinner-color:var(--ion-color-primary, #3880ff);--backdrop-opacity:var(--ion-backdrop-opacity, 0.32);color:var(--ion-color-step-850, #262626);font-size:14px}.loading-wrapper.sc-ion-loading-md{border-radius:2px;padding-left:24px;padding-right:24px;padding-top:24px;padding-bottom:24px;-webkit-box-shadow:0 16px 20px rgba(0, 0, 0, 0.4);box-shadow:0 16px 20px rgba(0, 0, 0, 0.4)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.loading-wrapper.sc-ion-loading-md{padding-left:unset;padding-right:unset;-webkit-padding-start:24px;padding-inline-start:24px;-webkit-padding-end:24px;padding-inline-end:24px}}.loading-spinner.sc-ion-loading-md+.loading-content.sc-ion-loading-md{margin-left:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.loading-spinner.sc-ion-loading-md+.loading-content.sc-ion-loading-md{margin-left:unset;-webkit-margin-start:16px;margin-inline-start:16px}}\";\nconst Loading = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.didPresent = createEvent(this, \"ionLoadingDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionLoadingWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionLoadingWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionLoadingDidDismiss\", 7);\n    this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n    this.presented = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n    this.keyboardClose = true;\n    /**\n     * Number of milliseconds to wait before dismissing the loading indicator.\n     */\n    this.duration = 0;\n    /**\n     * If `true`, the loading indicator will be dismissed when the backdrop is clicked.\n     */\n    this.backdropDismiss = false;\n    /**\n     * If `true`, a backdrop will be displayed behind the loading indicator.\n     */\n    this.showBackdrop = true;\n    /**\n     * If `true`, the loading indicator will be translucent.\n     * Only applies when the mode is `\"ios\"` and the device supports\n     * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n     */\n    this.translucent = false;\n    /**\n     * If `true`, the loading indicator will animate.\n     */\n    this.animated = true;\n    this.onBackdropTap = () => {\n      this.dismiss(undefined, BACKDROP);\n    };\n  }\n  connectedCallback() {\n    prepareOverlay(this.el);\n  }\n  componentWillLoad() {\n    if (this.spinner === undefined) {\n      const mode = getIonMode(this);\n      this.spinner = config.get('loadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  }\n  /**\n   * Present the loading overlay after it has been created.\n   */\n  present() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield present(_this, 'loadingEnter', iosEnterAnimation, mdEnterAnimation);\n      if (_this.duration > 0) {\n        _this.durationTimeout = setTimeout(() => _this.dismiss(), _this.duration + 10);\n      }\n    })();\n  }\n  /**\n   * Dismiss the loading overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the loading.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the loading.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   */\n  dismiss(data, role) {\n    if (this.durationTimeout) {\n      clearTimeout(this.durationTimeout);\n    }\n    return dismiss(this, data, role, 'loadingLeave', iosLeaveAnimation, mdLeaveAnimation);\n  }\n  /**\n   * Returns a promise that resolves when the loading did dismiss.\n   */\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionLoadingDidDismiss');\n  }\n  /**\n   * Returns a promise that resolves when the loading will dismiss.\n   */\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionLoadingWillDismiss');\n  }\n  renderLoadingMessage(msgId) {\n    const {\n      customHTMLEnabled,\n      message\n    } = this;\n    if (customHTMLEnabled) {\n      return h(\"div\", {\n        class: \"loading-content\",\n        id: msgId,\n        innerHTML: sanitizeDOMString(message)\n      });\n    }\n    return h(\"div\", {\n      class: \"loading-content\",\n      id: msgId\n    }, message);\n  }\n  render() {\n    const {\n      message,\n      spinner,\n      htmlAttributes,\n      overlayIndex\n    } = this;\n    const mode = getIonMode(this);\n    const msgId = `loading-${overlayIndex}-msg`;\n    /**\n     * If the message is defined, use that as the label.\n     * Otherwise, don't set aria-labelledby.\n     */\n    const ariaLabelledBy = message !== undefined ? msgId : null;\n    return h(Host, Object.assign({\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": ariaLabelledBy,\n      tabindex: \"-1\"\n    }, htmlAttributes, {\n      style: {\n        zIndex: `${40000 + this.overlayIndex}`\n      },\n      onIonBackdropTap: this.onBackdropTap,\n      class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), {\n        [mode]: true,\n        'overlay-hidden': true,\n        'loading-translucent': this.translucent\n      })\n    }), h(\"ion-backdrop\", {\n      visible: this.showBackdrop,\n      tappable: this.backdropDismiss\n    }), h(\"div\", {\n      tabindex: \"0\"\n    }), h(\"div\", {\n      class: \"loading-wrapper ion-overlay-wrapper\"\n    }, spinner && h(\"div\", {\n      class: \"loading-spinner\"\n    }, h(\"ion-spinner\", {\n      name: spinner,\n      \"aria-hidden\": \"true\"\n    })), message !== undefined && this.renderLoadingMessage(msgId)), h(\"div\", {\n      tabindex: \"0\"\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nLoading.style = {\n  ios: loadingIosCss,\n  md: loadingMdCss\n};\nexport { Loading as ion_loading };","map":null,"metadata":{},"sourceType":"module"}