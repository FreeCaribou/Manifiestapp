/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import "~@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

* {
  --ion-font-family: "Proxima Nova";
}

.main-map {
  width: 100%;
  height: 100%;
}

.event-detail-map {
  width: 80%;
  height: 500px;
}

.fake-mouse-select {
  cursor: pointer;
}

ion-icon.medium-icon {
  font-size: 24px;
}

ion-icon.big-icon {
  font-size: 36px;
}

.flex-horizontal-space-around {
  display: flex;
  justify-content: space-evenly;
}

ion-menu {
  --ion-background-color: var(--ion-color-primary);
  --ion-text-color: var(--ion-color-primary-contrast);

  ion-list {
    /* optional, but it needs when you use gradient as a background color.*/
    background: transparent;
    padding-top: 0 !important;
    border: none !important;
  }

  ion-segment-button {
    color: var(--ion-color-dark-tint);
  }

  ion-menu-toggle {
    ion-item {
      color: var(--ion-color-dark-tint);
      ion-icon {
        color: var(--ion-color-dark-tint) !important;
      }
      :hover {
        color: var(--ion-color-secondary) !important;
      }
    }

    ion-item.selected {
      color: var(--ion-color-secondary);
      background-color: rgba(var(--ion-color-secondary-rgb), 0.14);

      :hover {
        color: var(--ion-color-secondary) !important;
      }

      ion-icon {
        color: var(--ion-color-secondary) !important;
      }
    }
  }

  ion-list-header {
    color: var(--ion-color-secondary);
  }

  ion-note {
    color: var(--ion-color-secondary-shade) !important;
  }
}

.btn-lang-box {
  display: flex;
  padding-top: 0;

  button {
    flex: 1;
    background-color: var(--ion-color-primary);
    padding: 12px 0;
    font-size: 14px;
  }

  // bug with mobile, an weird css focus appear
  :focus {
    outline: none;
    box-shadow: none;
  }

  :disabled {
    color: var(--ion-color-secondary);
    border-bottom: solid var(--ion-color-secondary) 2px;
  }
}

.separator-line {
  margin: 10px 15px;
  border-bottom: solid var(--ion-color-primary) 1px;
}

.programme-card-body {
  margin: 0;
  height: 100%;

  ion-thumbnail {
    height: 150px;
    width: 100%;
  }

  // ::part(image) {
  //   height: 150px;
  // }

  ion-card-header {
    padding: 0 5px;
  }

  ion-card-content {
    padding: 5px;
  }

  // TODO Must decide if we let long text or cut (cut for the moment)
  ion-card-title {
    // max-height: 48px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 18px;
  }
}

.m-16 {
  margin: 16px;
}

.m-bt-16 {
  margin-bottom: 16px;
}

.m-top-16 {
  margin-top: 16px;
}

.m-left-16 {
  margin-left: 16px;
}

.m-right-16 {
  margin-right: 16px;
}

.disabled-margin {
  margin: 0 !important;
}

.primary-color {
  color: var(--ion-color-primary);
}

.secondary-color {
  color: var(--ion-color-secondary);
}

.tertiary-color {
  color: var(--ion-color-tertiary);
}

.loading-block {
  z-index: 1000;
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(#000, 0.75);
}

.loading-inside {
  display: block;
  right: 0;
  bottom: 0;
  position: absolute;
  top: 50%;
  left: 50%;
}

// the tab selected button color
ion-tab-button {
  --color-selected: var(--ion-color-secondary);
  --color-focused: var(--ion-color-secondary);
}
.custom-tab-selected {
  color: var(--ion-color-secondary) !important;
}
